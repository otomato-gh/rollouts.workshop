apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: otoflask
spec:
  strategy:
    canary:
      analysis:
        templates:
        - templateName: otoflask-exceptions
        args:
        - name: service-name
          value: otoflask-canary
      canaryService: otoflask-canary
      stableService: otoflask
      trafficRouting:
        traefik:
          weightedTraefikServiceName: otoflask-service
      steps:
      - setWeight: 5
      - pause: {duration: 30}
      - setWeight: 10
      - pause: {duration: 30}
      - setWeight: 30
      - pause: {duration: 30}
      - setWeight: 60
      - pause: {duration: 30}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: otoflask
  template:
    metadata:
      labels:
        app: otoflask
    spec:
      containers:
      - name: otoflask
        image: otomato/prom-flask:0.1
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: otoflask-exceptions
spec:
  args:
  - name: service-name
  metrics:
  - name: exceptions-count
    interval: 20s
    successCondition: result[0] <= 2.0
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.default.svc.cluster.local:9090
        query: exceptions_total{instance="{{args.service-name}}:80"} 

---
apiVersion: v1
kind: Service
metadata:
  name: otoflask-canary
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: otoflask
---
apiVersion: v1
kind: Service
metadata:
  name: otoflask
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: otoflask
---
apiVersion: traefik.containo.us/v1alpha1
kind: TraefikService
metadata:
  name: otoflask-service
spec:
  weighted:
    services:
      - name: otoflask # k8s service name that you need to create for stable application version
        port: 80
      - name: otoflask-canary # k8s service name that you need to create for new application version
        port: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: demo 
spec:
  routes: 
  - kind: Rule
    match: Host(`otoflask.<MY_IP>.nip.io`)
    services:                       # [8]
    - kind: TraefikService
      name: otoflask-service
      namespace: default
      port: 80
      scheme: http
      strategy: RoundRobin
